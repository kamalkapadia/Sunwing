@using Sunwing.Web.Models
@using Kendo.Mvc.UI;

@{
    ViewBag.Title = "Contact Manager";
}
<h2>@ViewBag.Title</h2>
<div id="dvContactManager" class="ContentTable flex-container" style="margin-left: 9px; width: 99%;">
<table id="tblContactManager" width="100%">
    <tr>
        <td colspan="4">
            @*<div id="dvContactManagerGridError" class="RequiredField" style="width:20%;margin:7px;">
                No contact data available.
            </div>*@
            <p></p>
            <div id="dvManageContact" class="" style="margin:9px;">
                @(Html.Kendo().Grid<ContactViewModel>()
                                .Name("grdManageContact")
                                .Columns(columns =>
                                {
                                    columns.Bound(e => e.Id).Width("200px").Hidden(true);
                                    columns.Bound(e => e.Birthday).Width("200px");
                                    columns.Bound(e => e.Email).Width("200px");
                                    columns.Bound(e => e.FirstName).Width("200px");
                                    columns.Bound(e => e.LastName).Width("200px");
                                    columns.Bound(e => e.Telephone).Width("200px");
                                    columns.Bound(e => e.ContactType).ClientTemplate("#=ContactType.CustomerType#").Width("200px");
                                    columns.Command(e => { e.Edit(); e.Destroy(); }).Width("250px");
                                })
                                .ToolBar(t =>
                                {
                                    t.Create();
                                })
                                //.Groupable()
                                .Sortable()
                                .Editable(editable => editable.Mode(GridEditMode.InLine))
                                //.HtmlAttributes(new { style = "font: 14px/16px 'segoe ui',arial,sans-serif; text-align:left; vertical-align:middle;height:380px;" })
                                .Scrollable()
                                .DataSource(dataSource => dataSource
                                    .Ajax()
                                    //.ServerOperation(true)
                                    .Model(model => model.Id(x => x.Id))
                                    .Create(update => update.Action("Post", "Home"))
                                    .Read(read => read.Action("Get", "Home"))
                                    .Update(update => update.Action("Put", "Home"))
                                    .Destroy(destroy => destroy.Action("Delete", "Home"))
                                )
                )
            </div>
        </td>
    </tr>

</table>
</div>
